{"version":3,"sources":["list.js"],"names":["createList","createNode","value","appendList","list","node","x","next","removeFromList","p","data","travelList","fn","node2","node3","node4","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAOA,aAAa,SAAbA,UAAa,QAAS;AACzB,WAAOC,WAAWC,KAAX,CAAP;AACH,CAFD;AAGA,IAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOF,KAAP,EAAgB;AAC/B,QAAMG,OAAOJ,WAAWC,KAAX,CAAb;AACA,QAAII,IAAIF,IAAR;AACA,WAAME,EAAEC,IAAR,EAAa;AACTD,YAAIA,EAAEC,IAAN;AACH;AACD;AACAD,MAAEC,IAAF,GAASF,IAAT;AACA,WAAOA,IAAP;AACH,CATD;;AAWA,IAAMG,iBAAiB,SAAjBA,cAAiB,CAACJ,IAAD,EAAMC,IAAN,EAAc;AACjC,QAAIC,IAAIF,IAAR;AACA,QAAIK,IAAI,IAAR;AACA,WAAMH,MAAMD,IAAZ,EAAiB;AACbI,YAAIH,CAAJ;AACAA,YAAIA,EAAEC,IAAN;AACH;AACDE,MAAEF,IAAF,GAASD,EAAEC,IAAX;AAGH,CAVD;;AAYA,IAAMN,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC1B,WAAO;AACHQ,cAAMR,KADH;AAEHK,cAAM;AAFH,KAAP;AAIH,CALD;;AAOA,IAAMI,aAAa,SAAbA,UAAa,CAACP,IAAD,EAAOQ,EAAP,EAAc;AAC7B,QAAIN,IAAIF,IAAR;AACA,WAAME,MAAM,IAAZ,EAAiB;AACbM,WAAGN,CAAH;AACAA,YAAEA,EAAEC,IAAJ;AACH;AACJ,CAND;;AASA,IAAMH,OAAOJ,WAAW,EAAX,CAAb;AACA,IAAMa,QAAQV,WAAWC,IAAX,EAAiB,EAAjB,CAAd;AACA,IAAMU,QAAQX,WAAWC,IAAX,EAAiB,EAAjB,CAAd;AACA,IAAMW,QAAQZ,WAAWC,IAAX,EAAiB,EAAjB,CAAd;;AAEAO,WAAWP,IAAX,EAAgB,gBAAM;AAClBY,YAAQC,GAAR,CAAYZ,KAAKK,IAAjB;AACH,CAFD","file":"list.e215e2fa.map","sourceRoot":"..\\src","sourcesContent":["const  createList = value => {\r\n    return createNode(value)\r\n}\r\nconst appendList = (list, value) =>{\r\n    const node = createNode(value)\r\n    let x = list\r\n    while(x.next){\r\n        x = x.next\r\n    }\r\n    // x.next === null\r\n    x.next = node\r\n    return node\r\n}\r\n\r\nconst removeFromList = (list,node)=> {\r\n    let x = list\r\n    let p = null\r\n    while(x !== node){\r\n        p = x\r\n        x = x.next\r\n    }\r\n    p.next = x.next\r\n\r\n\r\n}\r\n\r\nconst createNode = (value) => {\r\n    return {\r\n        data: value,\r\n        next: null\r\n    }\r\n}\r\n\r\nconst travelList = (list ,fn) => {\r\n    let x = list\r\n    while(x !== null){\r\n        fn(x)\r\n        x=x.next\r\n    }\r\n}\r\n\r\n\r\nconst list = createList(10)\r\nconst node2 = appendList(list, 20)\r\nconst node3 = appendList(list, 30)\r\nconst node4 = appendList(list, 40)\r\n\r\ntravelList(list,node=>{\r\n    console.log(node.data)\r\n})\r\n"]}